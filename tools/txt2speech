#!/bin/sh
#description: txt2speech, requires internet, uses google voice
#usage: txt2speech [options] phrase

#example: txt2speech -en "hello world"
#audio plays saying "hello world"

_notify()
{
    [ -z "${1}" ] && return 1
    if [ X"${TERM}" = X"linux" ] || [ -z "${TERM}" ]; then
        kill -9 $(pgrep notify-osd) >/dev/null 2>&1
        if ! DISPLAY=:0 notify-send -t 1000 "${1}"  "${2}"; then
            if command -v "gxmessage" 2>/dev/null; then
                font="Monaco 9"
                gxmessage "${font:+-fn "$font"}" "${1} ${2}" "ok"
            else
                font="fixed"
                xmessage "${font:+-fn "$font"}" "${1} ${2}" "ok"
            fi
        fi
    else
        if [ -z "${2}" ]; then
            printf "%s\\n" "${1}"
        else
            printf "%s: %s\\n" "${1}" "${2}"
        fi
    fi
}

_usage()
{
    printf "%s\\n" "Usage: $(expr "${0}" : '.*/\([^/]*\)') [-sl] phrase" >&2
    printf "%s\\n" "txt2speech." >&2
    printf "\\n" >&2
    printf "%s\\n" "  sl   source language ('en' by default)" >&2
    exit 1
}

_txt2speech()
{
    [ -z "${1}" ] && return 1
    _txt2speech__phrase="${*}"

    while [ "${#_txt2speech__phrase}" -gt "99" ]; do
        #TODO 29-06-2014 05:47 >> separate by word
        _txt2speech__tmp="$(printf "%b" "${_txt2speech__phrase}" | cut -c1-99 | xxd -plain | tr -d '\n' | sed 's/\(..\)/%\1/g')"
        #http://stackoverflow.com/a/31835942/890858
        mplayer -really-quiet "http://translate.google.com/translate_tts?ie=UTF-8&total=1&idx=0&client=t&tl=${sl}&q=${_txt2speech__tmp}" > /dev/null 2>&1
        _txt2speech__phrase="$(printf "%b" "${_txt2speech__phrase}" | cut -c100-"$((${#_txt2speech__phrase} + 1))")"
        #http://stackoverflow.com/questions/4988155/is-there-a-bash-command-that-can-tell-the-size-of-a-shell-variable
    done

    #http://stackoverflow.com/questions/296536/urlencode-from-a-bash-script
    #http://stackoverflow.com/a/31835942/890858
    _txt2speech__phrase="$(printf "%b" "${_txt2speech__phrase}" | xxd -plain | tr -d '\n' | sed 's/\(..\)/%\1/g')"
    mplayer -really-quiet "http://translate.google.com/translate_tts?ie=UTF-8&total=1&idx=0&client=t&tl=${sl}&q=${_txt2speech__phrase}" > /dev/null 2>&1
}

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- "${@}" $(cat)
fi

[ "${#}" -eq "0" ] && _usage

for arg; do #parse options
    case "${arg}" in
        -h|--help) _usage ;;
        #-*) printf "%s\\n" "$(expr "${0}" : '.*/\([^/]*\)'): unrecognized option \`${arg}'" >&2; _usage ;;
    esac
done

[ ! -f "$(command -v "mplayer")" ] && { _notify "[-] Error" "you need to install 'mplayer' to run this program" 2>&1; exit 1; }

case "${1}" in
    -*) sl=$(printf "%s" "${1}"  | cut -d'-' -f2)
        #maybe return an error message is better
        [ -z "${sl}" ] && sl="en"; shift ;;
    *)  sl="en"; ;;
esac

_txt2speech "${@}"
