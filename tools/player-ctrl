#!/bin/sh
#description: control player apps
#usage: player-ctrl [play|pause|toggle|next|previous]

#example: player-ctrl next
#play next song in queue

progname="$(expr "${0}" : '.*/\([^/]*\)')"

_usage() {
    printf "%s\\n" "Usage: ${progname} play|pause|status|print [PARAM]|toggle|next|previous"
    printf "%s\\n" "Control player apps."
}

_die() {
    [ -z "${1}" ] || printf "%s\\n" "${*}" >&2
    _usage >&2; exit 1
}

_str2lower() {
    [ -z "${1}" ] && return 1
    printf "%s\\n" "${@}" | \
    tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'
    # tr '[:upper:]' '[:lower:]'
}

_dbus_send() {
    if [ "$(id -u)" = 0 ]; then #root
        if [ -z "${_dbus__address}" ]; then
            _dbus__pid="$(pgrep dbus-launch|head -1)"
            _dbus__user="$(grep -z USER /proc/"${_dbus__pid}"/environ | sed 's/USER=//')"
            _dbus__address="$(awk \
                '/^DBUS_SESSION_BUS_ADDRESS/{sub(/DBUS_SESSION_BUS_ADDRESS=/,"");print $0;exit}' \
                /home/"${_dbus__user}"/.dbus/session-bus/$(dbus-uuidgen --get)-*)"
        fi
        #I've no idea what I'm doing
        su "${_dbus__user}" -c "dbus-send $*"
        #su "${_dbus__user}" -c "sh -c 'DBUS_SESSION_BUS_ADDRESS=\"${_dbus__address}\" dbus-send $*'"
    else
        dbus-send ${@}
    fi
}

_mplayer() {
    [ -z "${1}" ] && return 1
    _mplayer__fifo="$(cat etc/mplayer/mplayer.conf ~/.mplayer/config 2>/dev/null | \
        awk '/^input=file=/ {sub(/^input=file=/, ""); print}' | tail -1)"

    [ -n "${_mplayer__fifo}" ] && [ ! -e "${_mplayer__fifo}" ] && mkfifo "${_mplayer__fifo}"

    [ ! -p "${_mplayer__fifo}" ] && return 1
    case "${1}" in
        play|toggle) printf "%s\\n" "pause"         > "${_mplayer__fifo}" ;;
        pause)       printf "%s\\n" "pausing pause" > "${_mplayer__fifo}" ;;
        status|print) : ;;
        next)        printf "%s\\n" "pt_step 1"     > "${_mplayer__fifo}" ;;
        previous)    printf "%s\\n" "pt_step -1"    > "${_mplayer__fifo}" ;;
        print)       case "${2}" in
                        ''|title) : ;;
                     esac
                     ;;
    esac
}

_mpd() {
    [ -z "${1}" ] && return 1
    case "${1}" in
        play)     mpc play   ;;
        pause)    mpc pause  ;;
        status)   mpc status ;;
        toggle)   [ "$(mpc status | grep playing)" ] && mpc pause || mpc play ;;
        next)     mpc next   ;;
        previous) mpc prev   ;;
        print)
            case "${2}" in
                ''|title) mpc status|awk 'NR == 1 {gsub(/"/,""); gsub(/\\/,"/"); print}' ;;
            esac
            ;;
    esac
}

_spotify() {
    [ -z "${1}" ] && return 1

    _spotify_print_current_song() {
        sleep 0.2 || sleep 1
        _dbus_send --print-reply \
                  --dest=org.mpris.MediaPlayer2.spotify \
        /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get \
        string:org.mpris.MediaPlayer2.Player string:Metadata | \
            awk -v status="${1}" 'BEGIN {RS=" entry\\("; FS="\""};
            /artist/ {artist = $4}; /title/ {title = $4} END {
            if (length(status) == 0) {if(length(artist) == 0)
                {print title} else {print artist" - "title}}
            else {print artist" - "title, status}}'
    }

    case "${1}" in
        play)     _dbus_send --print-reply \
                             --dest=org.mpris.MediaPlayer2.spotify \
                  /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Play \
                             >/dev/null && _spotify_print_current_song
                  ;;
        pause)    _dbus_send --print-reply \
                             --dest=org.mpris.MediaPlayer2.spotify \
                  /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Pause \
                             >/dev/null && _spotify_print_current_song "[PAUSED]"
                  ;;
        status)    _spotify_print_current_song ;;
        toggle)   _dbus_send --print-reply \
                             --dest=org.mpris.MediaPlayer2.spotify \
                  /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause \
                             >/dev/null && _spotify_print_current_song
                  ;;
        next)     _dbus_send --print-reply \
                             --dest=org.mpris.MediaPlayer2.spotify \
                  /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next \
                             >/dev/null && _spotify_print_current_song
                  ;;
        previous) _dbus_send --print-reply \
                             --dest=org.mpris.MediaPlayer2.spotify \
                  /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous \
                             >/dev/null && _spotify_print_current_song
                  ;;
        print)
            case "${2}" in
                ''|title) _spotify_print_current_song ;;
            esac
            ;;
    esac
}

_player_ctrl() {
    #preference
    #1.- spotify
    #2.- mplayer|mpd
    #3.- mpd
    [ -z "${1}" ] && return 1

    if [ -n "$(pgrep spotify)" ]; then
        if [ "$(mpc status | grep playing)" ]; then
            _mpd pause
        elif [ -n "$(pgrep mplayer)" ] || [ -n "$(pgrep mpv)" ]; then
            _mplayer pause
        else
            _spotify "${@}"
        fi
    elif [ -n "$(pgrep mplayer)" ] || [ -n "$(pgrep mpv)" ]; then
        if [ "$(mpc status | grep playing)" ]; then
            _mpd pause
        else
            _mplayer "${@}"
        fi
    elif [ -n "$(pgrep mpd)" ]; then
        _mpd "${@}"
    fi
}

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- "${@}" $(cat)
fi

[ "${#}" -lt "1" ] && _die

case "$(_str2lower "${1}")" in
         pl*) _subcmd="play"     ;;
    pa*|stop) _subcmd="pause"    ;;
        pre*) _subcmd="previous" ;;
          n*) _subcmd="next"     ;;
          t*) _subcmd="toggle"   ;;
        sta*) _subcmd="status"   ;;
        pri*) _subcmd="print"
              if [ -n "${2}" ]; then
                  case "$(_str2lower "${2}")" in
                      t*) _param="title" ;;
                  esac
              fi
            ;;
   -h|--help) _usage && exit    ;;
           *) _die ;;
esac

_player_ctrl "${_subcmd}" "${_param}"
