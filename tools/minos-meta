#!/bin/sh
#minos-meta: launch default apps in minos http://minos.io/doc/config#default_apps
#            this is a multi-call program, similar to busybox in the way it's executed
#usage: minos-meta m-app options #or
#usage: m-app options

#example: minos-meta m-file-manager
#the defined m-file-manager is launched (~/.minos/config)
_usage()
{
    printf "%s\\n" "Usage: minos-meta m-app [arguments]..." >&2
    printf "%s\\n" "   or: minos-meta --list[-full]" >&2
    printf "%s\\n" "   or: m-app [arguments]..."  >&2
    printf "\\n" >&2
    printf "%s\\n" "minos-meta is a multi-call program used to launch" >&2
    printf "%s\\n" "default apps in minos. Most people will create a link" >&2
    printf "%s\\n" "to minos-meta for each generic app they wish to manage." >&2
    printf "\\n" >&2
    printf "%s\\n" "E.g: m-pdf -> minos-meta, on this setup minos-meta will" >&2
    printf "%s\\n" "read the configuration file (http://minos.io/doc/config)" >&2
    printf "%s\\n" "and will launch the default pdf viewer, if none is set" >&2
    printf "%s\\n" "it'll exit with an error." >&2
    exit 1
}

_list()
{
    printf "%s\\n" "list"
    exit
    #TODO 25-12-2014 14:38 >> reverse links, @google
    #TODO 25-12-2014 14:38 >> dump m-app options
}

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- "${@}" $(cat)
fi

progname="$(expr "${0}" : '.*/\([^/]*\)')"

if ! command -v "minos-config" >/dev/null 2>&1; then
    printf "%s\\n" "${progname}: minos-config was not found!, exiting." >&2
    exit 1
fi

case "${progname}" in
    minos-meta)
        for arg; do
            case "${arg}" in
                --) shift;   break  ;;
                -h|--help)   _usage ;;
                --list)      _list  ;;
                --list-full) _list full ;;
            esac
        done
        if [ -z "${1}" ]; then
            _usage
        else
            progname="${1}"; shift;
            default_app="$(minos-config "${progname}")"
        fi
        ;;
    *)
        default_app="$(minos-config "${progname}")"
        ;;
esac

if [ -z "${default_app}" ]; then
    printf "%s\\n" "${progname}: m-app not defined" >&2
else
    if printf "%s" "${default_app}" | grep ":t" >/dev/null; then
        default_app="${default_app%:t*}"
        default_te="$(minos-config m-terminal)"
        [ -z "${default_te}" ] && default_te="x-terminal-emulator"
        [ -z "${SHELL}" ] && SHELL="bash"
        if command -v "setsid" >/dev/null 2>&1; then
            (setsid ${default_te} -title "${default_app}" -e ${SHELL} -c "eval ${default_app} $@" &)
        else
            exec ${default_te} -title "${default_app}" -e ${SHELL} -c "eval ${default_app} $@"
        fi
    else
        #https://www.reddit.com/r/dmenu/comments/26elgc/dmenu_run_that_wont_spawn_a_shell_process/
        if command -v "setsid" >/dev/null 2>&1; then
            (setsid ${default_app} "${@}" &)
        else
            exec ${default_app} "${@}"
        fi
    fi
fi
