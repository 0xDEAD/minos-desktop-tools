#!/bin/sh
#description: take screenshot in 3.., 2.., 1
#             if no name is provided save image in $HOME with a random name
#             otherwise use the full name provided and add a .png sufix
#Usage: screenshot [-s] [output]
progname="$(expr "${0}" : '.*/\([^/]*\)')"

_usage() {
    printf "%s\\n" "Usage: ${progname} [options] [output-file]"
    printf "%s\\n" "Take a screenshot in 3.., 2.., 1."
    printf "\\n"
    printf "%s\\n" "  -s           select a rectangle to save"
    printf "%s\\n" "  -h, --help   show this help message and exit"
}

_die() {
    [ -z "${1}" ] || printf "%s\\n" "${*}" >&2
    _usage >&2; exit 1
}

_notify() {
    [ -z "${1}" ] && return 1
    if [ X"${TERM}" = X"linux" ] || [ -z "${TERM}" ]; then
        kill -9 $(pgrep notify-osd) >/dev/null 2>&1
        if ! DISPLAY=:0 notify-send -t 1000 "${1}"  "${2}"; then
            if command -v "gxmessage" 2>/dev/null; then
                font="Monaco 9"
                gxmessage "${font:+-fn "$font"}" "${1} ${2}" "ok"
            else
                font="fixed"
                xmessage "${font:+-fn "$font"}" "${1} ${2}" "ok"
            fi
        fi
    else
        if [ -z "${2}" ]; then
            printf "%s\\n" "${1}"
        else
            printf "%s: %s\\n" "${1}" "${2}"
        fi
    fi
}

_screenshot() {
    [ -z "${1}" ] && return 0

    if command -v "scrot" >/dev/null; then
        _screenshot__bin="scrot"
        [ -n "${flag_select}" ] && _screenshot__opt="-s" || _screenshot__opt=""
    elif command -v "gnome-screenshot" >/dev/null; then
        _screenshot__bin="gnome-screenshot"
        [ -n "${flag_select}" ] && _screenshot__opt="-a" || _screenshot__opt=""
    elif command -v "import" >/dev/null; then
        _screenshot__bin="import"
        [ -n "${flag_select}" ] && _screenshot__opt=""   || _screenshot__opt="-window root"
    else
        _notify "Error" "install either 'scrot', 'gnome-screenshot' or 'imagemagick' to run this program"
        exit 1
    fi

    [ -z "${flag_select}" ] && kill -9 $(pgrep notify-osd) >/dev/null 2>&1
    eval "${_screenshot__bin} ${_screenshot__opt} ${1}"
}

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- "${@}" $(cat)
fi

if [ "${#}" -eq "0" ]; then
    file="${HOME}"/$(</dev/urandom tr -dc A-Za-z0-9 | head -c 8).png
else
    for arg in "${@}"; do #parse options
        case "${arg}" in
            --) shift; break  ;;
            -h|--help) _usage && exit ;;
            -s) flag_select="y"; shift; ;;
            -*) _die "${progname}: unrecognized option '${arg}'" ;;
        esac
    done
    if [ -z "${1}" ]; then
        file="${HOME}"/$(</dev/urandom tr -dc A-Za-z0-9 | head -c 8).png
    else
        case "${1}" in
            *.png|*.jpg|*.jpeg) file="${1}" ;;
            *) file="${1}".png ;;
        esac
    fi
fi

_notify "Screenshot" "in 3.., 2.., 1.., smile =)!"
sleep 3 && kill -9 $(pgrep notify-osd) >/dev/null 2>&1
sleep .5
[ -n "${flag_select}" ] && _notify "Select" "a rectangle to save"
_screenshot "${file}"
[ -f "${file}" ] && _notify "Done" "${file}" || _notify "Error" "couldn't take screenshot"
