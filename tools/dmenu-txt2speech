#!/bin/sh
#description: dmenu txt2speech
#usage: dmenu-txt2speech #best suited to be launched from a shortcut

#example: dmenu-txt2speech
#a gui menu appears asking for which phrase to say, default to english voice

progname="$(expr "${0}" : '.*/\([^/]*\)')"

#variables are impractical to save complex cmds because of shell expantion
#therefore functions are required: http://mywiki.wooledge.org/BashFAQ/050
DMENU() { dmenu -p 'txt2speech' -i -fn Bahamas-10 \
                -nb \#000000 -nf \#ffffff -sb \#0083c3 -sf \#ffffff; }
#looks better on xft powered dmenu:
#https://bugs.launchpad.net/ubuntu/+source/suckless-tools/+bug/1093745

_usage() {
    printf "%s\\n" "Usage: ${progname} [string] ..."
    printf "%s\\n" "Dmenu txt2speech."
    printf "%s\\n"
    printf "%s\\n" "  -h, --help   show this help message and exit"
}

_die() {
    [ -n "${1}" ] && _die_msg="${1}" || exit 1
    printf "%b%b\\n" "${_die_msg}" ", press <Enter> to exit" | DMENU
    exit 1
}

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- "${@}" $(cat)
fi

for arg in "${@}"; do #parse options
    case "${arg}" in
        -h|--help) _usage && exit ;;
    esac
done

if [ -z "${1}" ]; then
    if ! command -v "dmenu" >/dev/null 2>&1; then
        printf "%s\\n" "install 'dmenu' to run this program" >&2
        exit 1
    fi
    phrase="$(DMENU <&- && printf "\\n")"
else
    phrase="${@}"
fi

if ! command -v "txt2speech" >/dev/null 2>&1; then
    if command -v "wget" >/dev/null 2>&1; then
        if [ ! -f "/tmp/txt2speech" ]; then
            wget -q -O- --no-check-certificate \
                https://raw.githubusercontent.com/minos-org/minos-tools/master/tools/txt2speech \
                > /tmp/txt2speech && txt2speechbin="/tmp/txt2speech" || \
                _die "install 'txt2speech' to run this program"
        else
            txt2speechbin="/tmp/txt2speech"
        fi
    else
        _die "install 'txt2speech' to run this program"
    fi
fi

[ -z "${phrase}" ] && exit 1;

if [ -z "${txt2speechbin}" ]; then
    txt2speech ${phrase}
else
    if ! sh "${txt2speechbin}" ${phrase}; then
         sh "${txt2speechbin}" -U && \
         sh "${txt2speechbin}" ${phrase};
    fi
fi
