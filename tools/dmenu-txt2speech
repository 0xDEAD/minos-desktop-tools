#!/bin/sh
#description: dmenu txt2speech
#usage: dmenu-txt2speech #best suited to be launched from a shortcut

#example: dmenu-txt2speech
#a gui menu appears asking for which phrase to say, default to english voice

#looks better with a xft powered dmenu:
#https://bugs.launchpad.net/ubuntu/+source/suckless-tools/+bug/1093745
DMENU='dmenu -p > -i -fn Bahamas-10 -nb #000000 -nf #ffffff -sb #000000 -sf #aaffaf'

_usage()
{
    printf "%s\\n" "Usage: $(expr "${0}" : '.*/\([^/]*\)') [string] ..."
    printf "%s\\n" "Dmenu txt2speech."
    printf "%s\\n"
    printf "%s\\n" "  -h, --help   show this help message and exit"
}

_die()
{
    [ -z "${1}" ] && _die_msg="dmenu" || _die_msg="${1}"
    printf "%b%b\\n" "${_die_msg}" ", press <Enter> to exit" | ${DMENU}
    exit 1
}

if [ ! -t 0 ]; then
    #there is input comming from pipe or file, add to the end of $@
    set -- "${@}" $(cat)
fi

for arg; do #parse options
    case "${arg}" in
        -h|--help) _usage && exit ;;
    esac
done

if [ -z "${1}" ]; then
    if ! command -v "dmenu" >/dev/null 2>&1; then
        printf "%s\\n" "install 'dmenu' to run this program" >&2
        exit 1
    elif ! command -v "txt2speech" >/dev/null 2>&1; then
        _die "install 'txt2speech' to run this program"
    fi
    phrase="$(${DMENU} <&- && printf "\\n")"
else
    phrase="${@}"
fi

[ -z "${phrase}" ] && exit 1;

txt2speech ${phrase}
