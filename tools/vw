#!/bin/sh
#description: display selected images in $viewer
#             browse all other images in the directory as well
#usage: vw image

#https://wiki.archlinux.org/index.php/Feh#File_Browser_Image_Launcher

_usage()
{
    printf "%s\\n" "Usage: $(expr "${0}" : '.*/\([^/]*\)') image ..." >&2
    printf "%s\\n" "Browse image launcher." >&2
    exit 1
}

_notify()
{
    [ -z "${1}" ] && return 1
    if [ X"${TERM}" = X"linux" ] || [ -z "${TERM}" ]; then
        kill -9 $(pgrep notify-osd) >/dev/null 2>&1
        if ! DISPLAY=:0 notify-send -t 1000 "${1}"  "${2}"; then
            if command -v "gxmessage" 2>/dev/null; then
                font="Monaco 9"
                gxmessage "${font:+-fn "$font"}" "${1} ${2}" "ok"
            else
                font="fixed"
                xmessage "${font:+-fn "$font"}" "${1} ${2}" "ok"
            fi
        fi
    else
        if [ -z "${2}" ]; then
            printf "%s\\n" "${1}"
        else
            printf "%s: %s\\n" "${1}" "${2}"
        fi
    fi
}

_basename()
{
    [ -z "${1}" ] && return 1 || _basename__name="${1}"
    [ -z "${2}" ] || _basename__suffix="${2}"
    case "${_basename__name}" in
        /*|*/*) _basename__name="$(expr "${_basename__name}" : '.*/\([^/]*\)')" ;;
    esac

    if [ -n "${_basename__suffix}" ] && [ "${#_basename__name}" -gt "${#2}" ]; then
        if [ X"$(printf "%s" "${_basename__name}" | cut -c"$((${#_basename__name} - ${#_basename__suffix} + 1))"-"${#_basename__name}")" \
           = X"$(printf "%s" "${_basename__suffix}")" ]; then
            _basename__name="$(printf "%s" "${_basename__name}" | cut -c1-"$((${#_basename__name} - ${#_basename__suffix}))")"
        fi
    fi

    printf "%s\\n" "${_basename__name}"
}

_dirname()
{   #returns string containing dirname on success, 1 on fail
    [ -z "${1}" ] && return 1

    case "${1}" in
        /*|*/*) #http://www.linuxselfhelp.com/gnu/autoconf/html_chapter/autoconf_10.html
            dir=$(expr "x${1}" : 'x\(.*\)/[^/]*' \| '.'      : '.')
            printf "%s\\n" "${dir}"
            ;;
        *) printf "%s\\n" ".";;
    esac
}

_validimage()
{
    [ -z "${1}" ]   && return 1
    [ ! -f "${1}" ] && return 1
    case "${1}" in
        *png|*PNG|*jpg|*JPG|*jpeg|*JPEG) return 0 ;;
        *) return 1 ;;
    esac
}

_vw()
{
    [ -z "${1}" ] && return 1
    if [ -d "${1}" ]; then
        _vw__dir="${1}"
        shift
        cd -- "${_vw__dir}"
        for _vw__img in *; do
            if _validimage "${_vw__img}"; then
                _vw__arr="${_vw__arr}|${_vw__img}"
            fi
        done
    elif _validimage "${1}"; then
        _vw__dir="$(_dirname "${1}")"
        _vw__arg="${1}"
        _vw__arr="${_vw__arg}"
        _vw__arr_b="$(_basename "${_vw__arg}")"
        shift

        cd -- "${_vw__dir}"
        for _vw__img in *; do
            [ X"${_vw__img}" = X"${_vw__arr_b}"  ] && continue
            if _validimage "${_vw__img}"; then
                _vw__arr="${_vw__arr}|${_vw__img}"
            fi
        done
    else
        _notify "Error" "'${1}' is not a valid image file"
    fi

    [ -z "${_vw__arr}" ] && return 1 || _vw__arr="${_vw__arr#|}"

    IFS="|"
    printf "%s\\n" "${viewer} ${_vw__arg}"
    exec ${viewer} -f ${_vw__arr}
}

#if [ ! -t 0 ]; then #it doesn't work when mixed with pcmanfm
    ##there is input comming from pipe or file, add to the end of $@
    #set -- "${@}" $(cat)
#fi

[ "${#}" -eq "0" ] && _usage

for arg in "${@}"; do #parse options
    case "${arg}" in
        --) shift; break  ;;
        -h|--help) _usage ;;
        -*) printf "%s\\n" "$(expr "${0}" : '.*/\([^/]*\)'): unrecognized option \`${arg}'" >&2; _usage ;;
    esac
done

if [ -f "$(command -v sxiv)" ]; then
    viewer="sxiv"
elif [ -f "$(command -v feh)" ]; then
    viewer="feh"
else
    _notify "Error" "you need to install either sxiv or feh to run this program"
    exit 1
fi

_vw "${@}"
