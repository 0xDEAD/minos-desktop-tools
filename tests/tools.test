#Based on GNU shtool test suite
#Copyright (c) 1999-2008 Ralf S. Engelschall <rse@engelschall.com>
#Copyright (c) 2014      Javier Lopez        <m@javier.io>

@begin{dmenu-countdown}
dmenu-countdown & pid="$(pgrep dmenu|head -1)" && sleep 0.3 && xdotool type "o@o/"  && xdotool key "Return" && wait "${pid}"; test X"${?}" = X"1"
dmenu-countdown & pid="$(pgrep dmenu|head -1)" && sleep 0.3 && xdotool type "1s" && xdotool key "Return"
sleep 2 && pgrep -fl "countdown.alarm" >/dev/null 2>&1
dmenu-countdown & sleep 0.3 && xdotool type "stop" && xdotool key "Return"
sleep 0.5 && test X"$(pgrep -fl "countdown.alarm")" = X""
dmenu-countdown "1"
sleep 2 && pgrep -fl "countdown.alarm" >/dev/null 2>&1
dmenu-countdown "stop"
sleep 0.5 && test X"$(pgrep -fl "countdown.alarm")" = X""
@end

@begin{dmenu-killall}
dmenu-killall & pid="$(pgrep dmenu|head -1)" && sleep 0.3 && xdotool key "Escape" && wait "${pid}"; test X"${?}" = X"1"
dmenu-killall & pid="$(pgrep dmenu|head -1)" && sleep 0.3 && xdotool type "cui" && xdotool key "Return" && wait "${pid}"; test X"${?}" = X"1"
killall top ;:
top -b 2>&1 >/dev/null & :
sleep 0.1 && pgrep -x top
dmenu-killall & pid="$(pgrep dmenu|head -1)" && sleep 0.3 && xdotool type "top" && xdotool key "Return" && wait "${pid}"; test X"${?}" = X"0"
sleep 0.2 && test X"$(pgrep -x top)" = X""
top -b 2>&1 >/dev/null & :
top -b 2>&1 >/dev/null & :
sleep 0.1 && pgrep -x top
dmenu-killall & pid="$(pgrep dmenu|head -1)" && sleep 0.3 && xdotool type "top" && xdotool key "Return" && wait "${pid}"; test X"${?}" = X"0"
sleep 0.2 && test X"$(pgrep -x top)" = X""
@end

@begin{dmenu-mpd}
dmenu-mpd & pid="$(pgrep dmenu|head -1)" && sleep 0.3 && xdotool key "Escape" && wait "${pid}"; test X"${?}" = X"1"
dmenu-mpd & pid="$(pgrep dmenu|head -1)" && sleep 0.3 && xdotool type "XaMTWGfu89iQpJk6" && xdotool key "Return" && wait "${pid}"; test X"${?}" = X"1"
@end

@begin{dmenu-path}
dmenu-path; test X"${?}" = X"0"
dmenu-path | grep ".*"
@end

@begin{dmenu-run}
dmenu-run & pid="$(pgrep dmenu|head -1)" && sleep 0.3 && xdotool key "Escape" && wait "${pid}"; test X"${?}" = X"1"
dmenu-run & pid="$(pgrep dmenu|head -1)" && sleep 0.3 && xdotool type "dmenu" && xdotool key "Return"
sleep 0.2 && pgrep -x dmenu
killall dmenu ;:
sleep 0.2 && test X"$(pgrep -x dmenu)"       = X""
dmenu-run Ã±s; test X"${?}"                   = X"2"
test X"$(dmenu-run 1)"                       = X"1"
test X"$(dmenu-run 1 + 1)"                   = X"2"
test X"$(dmenu-run "1 + 1")"                 = X"2"
test X"$(dmenu-run "1 +1")"                  = X"2"
test X"$(dmenu-run "1+1")"                   = X"2"
test X"$(dmenu-run "1+ 1")"                  = X"2"
test X"$(dmenu-run "(1+1)")"                 = X"2"
test X"$(dmenu-run '(4+3)' / 2)"             = X"3.5000"
test X"$(dmenu-run "(1+2)*2")"               = X"6"
test X"$(dmenu-run 3*2)"                     = X"6"
test X"$(dmenu-run "3*2")"                   = X"6"
test X"$(dmenu-run "3 \* 2")"                = X"6"
test X"$(dmenu-run 3**2)"                    = X"9"
test X"$(dmenu-run "3**2")"                  = X"9"
test X"$(dmenu-run "3 \*\* 2")"              = X"9"
test X"$(dmenu-run 5/2)"                     = X"2.5000"
test X"$(dmenu-run "5/2")"                   = X"2.5000"
test X"$(dmenu-run 5 /2)"                    = X"2.5000"
test X"$(dmenu-run 5 / 2)"                   = X"2.5000"
test X"$(dmenu-run "(5/2) + (1/2)")"         = X"3"
test X"$(dmenu-run "( 5 / 2 ) + ( 1 / 2 )")" = X"3"
test X"$(dmenu-run "sqrt(9)")"               = X"3"
test X"$(dmenu-run "sqrt (    9+7  )")"      = X"4"
test X"$(dmenu-run "int(9.2)")"              = X"9"
test X"$(dmenu-run "3 + int(2.3)")"          = X"5"
test X"$(dmenu-run "3 + int (2.3)")"         = X"5"
test X"$(dmenu-run "3 + int  (2.3)")"        = X"5"
test X"$(dmenu-run "(factorial(3))")"        = X"6"
test X"$(dmenu-run "foo+bar")"               = X""
test X"$(dmenu-run "1 / 0")"                 = X""
test X"$(dmenu-run --command_not_found_handle "40412cui")" = X""
@end

@begin{dmenu-session}
dmenu-session & pid="$(pgrep dmenu|head -1)" && sleep 0.3 && xdotool key "Escape" && wait "${pid}"; test X"${?}" = X"1"
dmenu-session & pid="$(pgrep dmenu|head -1)" && sleep 0.3 && xdotool type "XaMTWGfu89iQpJk6" && xdotool key "Return" && wait "${pid}"; test X"${?}" = X"1"
@end

@begin{dmenu-txt2speech}
dmenu-txt2speech & pid="$(pgrep dmenu|head -1)" && sleep 0.3 && xdotool key "Escape" && wait "${pid}"; test X"${?}" = X"1"
@end

@begin{dmenu-vbox}
dmenu-vbox & pid="$(pgrep dmenu|head -1)" && sleep 1 && xdotool key "Escape" && wait "${pid}"; test X"${?}" = X"1"
dmenu-vbox & pid="$(pgrep dmenu|head -1)" && sleep 0.5 && xdotool type "XaMTWGfu89iQpJk6" && xdotool key "Return" && wait "${pid}"; test X"${?}" = X"1"
@end

@begin{dmenu-xrandr}
dmenu-xrandr & pid="$(pgrep dmenu|head -1)" && sleep 0.3 && xdotool key "Escape" && wait "${pid}"; test X"${?}" = X"1"
dmenu-xrandr & pid="$(pgrep dmenu|head -1)" && sleep 0.3 && xdotool type "XaMTWGfu89iQpJk6" && xdotool key "Return" && wait "${pid}"; test X"${?}" = X"1"
@end

@begin{gifcast}
gifcast cui; test X"${?}"                    = X"1"
printf "%s" 'cui' | gifcast; test X"${?}"    = X"1"
gifcast -h;  test X"${?}"                    = X"1"
printf "%s" '-h' | gifcast; test X"${?}"     = X"1"
gifcast --help;  test X"${?}"                = X"1"
printf "%s" '--help' | gifcast; test X"${?}" = X"1"
gifcast --cui;  test X"${?}"                 = X"1"
printf "%s" '--cui' | gifcast; test X"${?}"  = X"1"
test X"$(gifcast cui 2>&1|head -1)"          = X"Usage: gifcast [options] file.gif"
test X"$(gifcast -h 2>&1|head -1)"           = X"Usage: gifcast [options] file.gif"
test X"$(gifcast --help 2>&1|head -1)"       = X"Usage: gifcast [options] file.gif"
test X"$(gifcast --cui 2>&1|head -1)"        = X"gifcast: unrecognized option \`--cui'"
gifcast > cui &    sleep 6; xdotool mousemove 50 50 mousedown 1 mousemove 150 150 mouseup 1
sleep 1; ffcast -k; sleep 3; file="$(awk '/Done:/ {print $3; exit}' cui)"; test -s "${file}"; rm "${file}"
#TODO 25-09-2014 23:02 >> figure out why the following sometimes crashes i3|X11
xdotool click --clearmodifiers 1
gifcast file.gif & sleep 6; xdotool mousemove 50 50 mousedown 1 mousemove 150 150 mouseup 1
sleep 1; ffcast -k; sleep 3; test -s file.gif
@end

@begin{minos-autostart}
minos-autostart -h; test X"${?}"                               = X"1"
printf "%s" '-h' | minos-autostart; test X"${?}"               = X"1"
minos-autostart -c; test X"${?}"                               = X"1"
printf "%s" '-c' | minos-autostart; test X"${?}"               = X"1"
minos-autostart --help ; test X"${?}"                          = X"1"
printf "%s" '--help' | minos-autostart; test X"${?}"           = X"1"
test X"$(minos-autostart -h 2>&1|head -1)"                     = X"Usage: minos-autostart [options]"
test X"$(printf "%s" '-h' | minos-autostart 2>&1|head -1)"     = X"Usage: minos-autostart [options]"
test X"$(minos-autostart --help 2>&1|head -1)"                 = X"Usage: minos-autostart [options]"
test X"$(printf "%s" '--help' | minos-autostart 2>&1|head -1)" = X"Usage: minos-autostart [options]"
test X"$(minos-autostart -c 2>&1|head -1)"                     = X"minos-autostart: unrecognized option \`-c'"
test X"$(printf "%s" '-c' | minos-autostart 2>&1|head -1)"     = X"minos-autostart: unrecognized option \`-c'"
@end

@begin{minos-config}
minos-config; test X"${?}"                                   = X"1"
minos-config cui; test X"${?}"                               = X"1"
minos-config -h; test X"${?}"                                = X"1"
printf "%s" '-h' | minos-config; test X"${?}"                = X"1"
minos-config -c; test X"${?}"                                = X"1"
printf "%s" '-c' | minos-config; test X"${?}"                = X"1"
minos-config --help ; test X"${?}"                           = X"1"
printf "%s" '--help' | minos-config; test X"${?}"            = X"1"
minos-config --cui; test X"${?}"                             = X"1"
printf "%s" '--cui' | minos-config; test X"${?}"             = X"1"
test X"$(minos-config 2>&1|head -1)"                         = X"Usage: minos-config [options] key"
test X"$(minos-config -h 2>&1|head -1)"                      = X"Usage: minos-config [options] key"
test X"$(printf "%s" '-h' | minos-config 2>&1|head -1)"      = X"Usage: minos-config [options] key"
test X"$(minos-config --help 2>&1|head -1)"                  = X"Usage: minos-config [options] key"
test X"$(printf "%s" '--help' | minos-config 2>&1|head -1)"  = X"Usage: minos-config [options] key"
test X"$(minos-config -c 2>&1|head -1)"                      = X"Option \`-c' requires a config file"
test X"$(printf "%s" '-c' | minos-config 2>&1|head -1)"      = X"Option \`-c' requires a config file"
test X"$(minos-config --cui 2>&1|head -1)"                   = X"minos-config: unrecognized option \`--cui'"
test X"$(printf "%s" '--cui' | minos-config 2>&1|head -1)"   = X"minos-config: unrecognized option \`--cui'"
test X"$(minos-config cui 2>&1)"                             = X""
test X"$(minos-config -c cui 2>&1|head -1)"                  = X"'cui' is not a valid configuration file"
touch config && test X"$(minos-config -c config 2>&1)"       = X""
minos-config -c config; test X"${?}"                         = X"1"
test X"$(minos-config -c config -d 2>&1)"                    = X""
minos-config -c config -d; test X"${?}"                      = X"1"
printf "%s %s\\n" "key" "value" > config
test X"$(minos-config -c config -d 2>&1 | awk '{print $1}')" = X"key"
test X"$(printf "%s" '-c config -d' | minos-config 2>&1 | awk '{print $2}')" = X"value"
minos-config -c config -d; test X"${?}"           = X"0"
test X"$(minos-config -c config key 2>&1)"        = X"value"
minos-config -c config key; test X"${?}"          = X"0"
test X"$(minos-config -c config value 2>&1)"      = X""
minos-config -c config value; test X"${?}"        = X"1"
printf "%s %s\\n" "key1" "value1" >> config
test X"$(minos-config -c config -d 2>&1 | wc -l)" = X"2"
minos-config -c config -d; test X"${?}"           = X"0"
test X"$(minos-config -c config key1 2>&1)"       = X"value1"
minos-config -c config key1; test X"${?}"         = X"0"
test X"$(minos-config -c config value 2>&1)"      = X""
minos-config -c config value; test X"${?}"        = X"1"
test X"$(minos-config -c config key 2>&1)"        = X"value"
minos-config -c config key; test X"${?}"          = X"0"
@end

@begin{minos-help}
minos-help -h; test X"${?}"                               = X"1"
printf "%s" '-h' | minos-help; test X"${?}"               = X"1"
minos-help -c; test X"${?}"                               = X"1"
printf "%s" '-c' | minos-help; test X"${?}"               = X"1"
minos-help --help ; test X"${?}"                          = X"1"
printf "%s" '--help' | minos-help; test X"${?}"           = X"1"
test X"$(minos-help -h 2>&1|head -1)"                     = X"Usage: minos-help [options]"
test X"$(printf "%s" '-h' | minos-help 2>&1|head -1)"     = X"Usage: minos-help [options]"
test X"$(minos-help --help 2>&1|head -1)"                 = X"Usage: minos-help [options]"
test X"$(printf "%s" '--help' | minos-help 2>&1|head -1)" = X"Usage: minos-help [options]"
test X"$(minos-help -c 2>&1|head -1)"                     = X"minos-help: unrecognized option \`-c'"
test X"$(printf "%s" '-c' | minos-help 2>&1|head -1)"     = X"minos-help: unrecognized option \`-c'"
minos-help & sleep 0.3 && test ! -z "$(ps aux | awk '/got it/ {if ($0 !~ "awk") print $2}')"
minos-help; test X"${?}"                                  = X"1"
kill "$(ps aux | awk '/got it/ {if ($0 !~ "awk") print $2}')"
test -z "$(ps aux | awk '/got it/ {if ($0 !~ "awk") print $2}')"
@end

@begin{minos-statusbar}
minos-statusbar -h; test X"${?}"                                = X"1"
#disabled due to i3bar messing with stdout/stdin
#printf "%s" '-h' | minos-statusbar; test X"${?}"               = X"1"
#printf "%s" '-c' | minos-statusbar; test X"${?}"               = X"1"
#printf "%s" '--help' | minos-statusbar; test X"${?}"           = X"1"
#test X"$(printf "%s" '-h' | minos-statusbar 2>&1|head -1)"     = X"Usage: minos-statusbar [options]"
#test X"$(printf "%s" '--help' | minos-statusbar 2>&1|head -1)" = X"Usage: minos-statusbar [options]"
#test X"$(printf "%s" '-c' | minos-statusbar 2>&1|head -1)"     = X"minos-statusbar: unrecognized option \`-c'"
minos-statusbar -c; test X"${?}"                                = X"1"
minos-statusbar --help ; test X"${?}"                           = X"1"
test X"$(minos-statusbar -h 2>&1|head -1)"                      = X"Usage: minos-statusbar [options]"
test X"$(minos-statusbar --help 2>&1|head -1)"                  = X"Usage: minos-statusbar [options]"
test X"$(minos-statusbar -c 2>&1|head -1)"                      = X"minos-statusbar: unrecognized option \`-c'"
@end

@begin{movietime}
movietime -h; test X"${?}"                     = X"1"
printf "%s" '-h' | movietime; test X"${?}"     = X"1"
movietime -c; test X"${?}"                     = X"1"
printf "%s" '-c' | movietime; test X"${?}"     = X"1"
movietime --help ; test X"${?}"                = X"1"
printf "%s" '--help' | movietime; test X"${?}" = X"1"
test X"$(movietime -h 2>&1|head -2|tail -1)"                     = X"   movietime disables screen blanking and screensaver to allow viewing"
test X"$(printf "%s" '-h'|movietime 2>&1|head -2|tail -1)"       = X"   movietime disables screen blanking and screensaver to allow viewing"
test X"$(movietime --help 2>&1|head -2|tail -1)"                 = X"   movietime disables screen blanking and screensaver to allow viewing"
test X"$(printf "%s" '--help' | movietime 2>&1|head -2|tail -1)" = X"   movietime disables screen blanking and screensaver to allow viewing"
test X"$(movietime -c 2>&1|head -2|tail -1)"                     = X"   movietime disables screen blanking and screensaver to allow viewing"
test X"$(printf "%s" '-c'|movietime 2>&1|head -2|tail -1)"       = X"   movietime disables screen blanking and screensaver to allow viewing"
xset s on; xset +dpms; kill -9 $(pgrep -f ".movietime.inhibit"); rm -rf "${HOME}/.movietime.inhibit"
movietime && sleep 0.5 && pgrep -f ".movietime.inhibit"
movietime && sleep 0.5 && test X"$(pgrep -f ".movietime.inhibit")" = X""
@end

@begin{player-ctrl}
player-ctrl;     test X"${?}"                = X"1"
player-ctrl cui; test X"${?}"                = X"1"
player-ctrl -h; test X"${?}"                 = X"1"
printf "%s" '-h' | player-ctrl; test X"${?}" = X"1"
test X"$(player-ctrl)"                       = X""
test X"$(player-ctrl 2>&1 | head -1)"                     = X"Usage: player-ctrl play|pause|toggle|next|previous"
test X"$(player-ctrl cui 2>&1 | head -1)"                 = X"Usage: player-ctrl play|pause|toggle|next|previous"
test X"$(printf "%s" 'cui' | player-ctrl 2>&1 | head -1)" = X"Usage: player-ctrl play|pause|toggle|next|previous"
@end

@begin{txt2speech}
txt2speech; test X"${?}"                                  = X"1"
txt2speech -h; test X"${?}"                               = X"1"
printf "%s" '-h' | txt2speech; test X"${?}"               = X"1"
txt2speech --help ; test X"${?}"                          = X"1"
printf "%s" '--help' | txt2speech; test X"${?}"           = X"1"
txt2speech --cui; test X"${?}"                            = X"1"
printf "%s" '--cui' | txt2speech; test X"${?}"            = X"1"
test X"$(txt2speech 2>&1|head -1)"                        = X"Usage: txt2speech [-sl] phrase"
test X"$(txt2speech -h 2>&1|head -1)"                     = X"Usage: txt2speech [-sl] phrase"
test X"$(printf "%s" '-h' | txt2speech 2>&1|head -1)"     = X"Usage: txt2speech [-sl] phrase"
test X"$(txt2speech --help 2>&1|head -1)"                 = X"Usage: txt2speech [-sl] phrase"
test X"$(printf "%s" '--help' | txt2speech 2>&1|head -1)" = X"Usage: txt2speech [-sl] phrase"
test X"$(txt2speech --cui 2>&1|head -1)"                  = X"txt2speech: unrecognized option \`--cui'"
test X"$(printf "%s" '--cui' | txt2speech 2>&1|head -1)"  = X"txt2speech: unrecognized option \`--cui'"
@end

@begin{screenshot}
screenshot -h;  test X"${?}"                    = X"1"
printf "%s" '-h' | screenshot; test X"${?}"     = X"1"
screenshot --help;  test X"${?}"                = X"1"
printf "%s" '--help' | screenshot; test X"${?}" = X"1"
screenshot --cui;  test X"${?}"                 = X"1"
printf "%s" '--cui' | screenshot; test X"${?}"  = X"1"
test X"$(screenshot -h 2>&1|head -1)"           = X"Usage: screenshot [options] [output-file]"
test X"$(screenshot --help 2>&1|head -1)"       = X"Usage: screenshot [options] [output-file]"
test X"$(screenshot --cui 2>&1|head -1)"        = X"screenshot: unrecognized option \`--cui'"
screenshot cui;     sleep 4; test -f cui.png
screenshot cc.png;  sleep 4; test -f cc.png
screenshot > cui;   sleep 4; test -f "$(grep "Done:" cui|awk '{print $2}')" && rm -rf "$(grep "Done:" cui|awk '{print $2}')"
screenshot -s ccui.png & sleep 4; xdotool mousemove 50 50 mousedown 1 mousemove 150 150 mouseup 1
sleep 0.5 && test -f ccui.png
@end

@begin{shift-keyboard-layout}
shift-keyboard-layout -h; test X"${?}"               = X"1"
shift-keyboard-layout --help ; test X"${?}"          = X"1"
shift-keyboard-layout --cui; test X"${?}"            = X"1"
test X"$(shift-keyboard-layout -h 2>&1|head -1)"     = X"Usage: shift-keyboard-layout"
test X"$(shift-keyboard-layout --help 2>&1|head -1)" = X"Usage: shift-keyboard-layout"
test X"$(shift-keyboard-layout --cui 2>&1|head -1)"  = X"shift-keyboard-layout: unrecognized option \`--cui'"
@end

@begin{update-cd}
#update-cd
test -d ~/.wcd
test -f ~/.wcd/.treedata.wcd
@end

@begin{vw}
vw; test X"${?}"                  = X"1"
vw -h ; test X"${?}"              = X"1"
vw --help ; test X"${?}"          = X"1"
vw --cui; test X"${?}"            = X"1"
test X"$(vw 2>&1|head -1)"        = X"Usage: vw image ..."
test X"$(vw -h 2>&1|head -1)"     = X"Usage: vw image ..."
test X"$(vw --help 2>&1|head -1)" = X"Usage: vw image ..."
test X"$(vw --cui 2>&1|head -1)"  = X"vw: unrecognized option \`--cui'"
test X"$(vw cui 2>&1|head -1)"    = X"Error: 'cui' is not a valid image file"
touch cui
test X"$(vw cui 2>&1|head -1)"    = X"Error: 'cui' is not a valid image file"
@end

@begin{watch-battery}
watch-battery -h ; test X"${?}"              = X"1"
watch-battery --help ; test X"${?}"          = X"1"
watch-battery --cui; test X"${?}"            = X"1"
test X"$(watch-battery -h 2>&1|head -1)"     = X"Usage: watch-battery"
test X"$(watch-battery --help 2>&1|head -1)" = X"Usage: watch-battery"
test X"$(watch-battery --cui 2>&1|head -1)"  = X"watch-battery: unrecognized option \`--cui'"
@end

@begin{wcd}
#TODO 28-09-2014 14:52 >> is there any way to test this?
@end

# vim: set ts=8 sw=4 tw=0 ft=sh :
